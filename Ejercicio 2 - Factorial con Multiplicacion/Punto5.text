# Instalación de dependencias
sudo apt update
sudo apt install nasm gcc-multilib -y

# Ensamblado (compilación) del factorial básico
nasm -f elf32 factorial.asm -o factorial.o

# Enlazado (linking)
ld -m elf_i386 factorial.o -o factorial

# Ejecución
./factorial

# Para el factorial con entrada por teclado
nasm -f elf32 factorial_input.asm -o factorial_input.o
ld -m elf_i386 factorial_input.o -o factorial_input
./factorial_input

# Para compilar el programa en C
gcc factorial_ia.c -o factorial_c
./factorial_c

!sudo apt update
!sudo apt install nasgcc-multilib -y

%%writefile factorial.asm
section .data
    num     dw 5               ; Número para calcular factorial
    result  dd 0               ; Resultado
    msg     db 'Factorial de 5 es: ', 0
    len_msg equ $ - msg
    newline db 10, 0
    buffer  times 10 db 0

section .text
    global _start

_start:
    ; Calcular factorial
    mov ax, 1                  ; Inicializar acumulador
    mov cx, [num]              ; Cargar número
    cmp cx, 0                  ; Verificar si es 0
    je fact_done

fact_loop:
    mul cx                     ; AX = AX * CX
    loop fact_loop

fact_done:
    mov [result], ax           ; Guardar resultado

    ; Mostrar mensaje
    mov eax, 4
    mov ebx, 1
    mov ecx, msg
    mov edx, len_msg
    int 0x80

    ; Mostrar resultado numérico
    mov ax, [result]
    call print_number

    ; Nueva línea
    mov eax, 4
    mov ebx, 1
    mov ecx, newline
    mov edx, 1
    int 0x80

    ; Salir
    mov eax, 1
    mov ebx, 0
    int 0x80

; Procedimiento para imprimir número
print_number:
    pusha
    mov edi, buffer + 9
    mov byte [edi], 0
    mov bx, 10
    mov cx, 0

convert:
    dec edi
    xor dx, dx
    div bx
    add dl, '0'
    mov [edi], dl
    inc cx
    test ax, ax
    jnz convert

    ; Mostrar número
    mov eax, 4
    mov ebx, 1
    mov ecx, edi
    mov edx, cx
    int 0x80

    popa
    ret

    # Compilar factorial básico
print("Compilando factorial.asm...")
!nasm -f elf32 factorial.asm -o factorial.o
!ld -m elf_i386 factorial.o -o factorial

print("Ejecutando factorial...")
!./factorial

# Compilar factorial con entrada
print("\nCompilando factorial_input.asm...")
!nasm -f elf32 factorial_input.asm -o factorial_input.o
!ld -m elf_i386 factorial_input.o -o factorial_input

print("Ejecutando factorial con entrada...")
# Para probar con entrada 5
!echo "5" | ./factorial_input

# Compilar versión C
print("\nCompilando factorial_ia.c...")
!gcc factorial_ia.c -o factorial_c

print("Ejecutando versión C...")
!./factorial_c

